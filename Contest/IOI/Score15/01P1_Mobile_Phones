// https://dmoj.ca/problem/ioi01p1
// 02/2021

#include <iostream>
#include <iomanip>
#include <algorithm>
#include <string>
#include <cstring>
#include <array>
#include <vector>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <stack>
#include <queue>
#include <deque>

using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
#define uset unordered_set
#define umap unordered_map
#define priq priority_queue
#define vec vector
#define all(x) begin(x), end(x)

template<class T, class U> static inline void amax (T& a, U b) { if (a<b) a = b; }
template<class T, class U> static inline void amin (T& a, U b) { if (a>b) a = b; }
template<class T> void scan (T& n) { n = 0; bool neg = 0; char c = getchar(); if (c=='-') neg = 1, c = getchar(); for (; c<'0'||'9'<c; c = getchar()); for (; '0'<=c&&c<='9'; c = getchar()) n = (n<<3)+(n<<1)+(c&15); if (neg) n *= -1; }
template<class T> void scan (T begin, T end) { while (begin!=end) scan(*begin++); }
void scan (vector<char>& c, const char&& escape = ' ') { c.clear(); char buf; do buf = getchar(); while (buf<'!'||'~'<buf); for (; buf!='\n'&&buf!=escape; buf = getchar()) c.push_back(buf); c.push_back('\0'); }
template<class T> void print (T n, char&& end = '\n') { bool neg = 0; if (n<0) neg = 1, n *= -1; char snum[65]; int i = 0; do { snum[i++] = n%10+'0'; n /= 10; } while (n); i--; if (neg) putchar('-'); while (i>=0) putchar(snum[i--]); putchar(end); }
template<class T> void print (T begin, T end) { while (begin!=end) print(*begin++, ' '); putchar('\n'); }

vec<vec<int>> bit;

void update (int i, int j, int val) {
    ++i, ++j;
    for (int m = i; m<bit.size(); m += m&-m) {
        for (int n = j; n<bit[i].size(); n += n&-n) {
            bit[m][n] += val;
        }
    }
}

int query (int i, int j) {
    ++i, ++j;
    int sum = 0;
    for (int m = i; m>=1; m -= m&-m) {
        for (int n = j; n>=1; n -= n&-n) {
            sum += bit[m][n];
        }
    }
    return sum;
}

void solve() {

    int n; scan(n); scan(n);
    bit = vec<vec<int>>(n+1, vec<int>(n+1));
    
    for (int instruction = 0; instruction!=3;) {
        scan(instruction);
        if (instruction==1) {
            int x, y, a; scan(x); scan(y); scan(a);
            update(x, y, a);
        } else if (instruction==2) {
            int r1, c1, r2, c2; scan(r1); scan(c1); scan(r2); scan(c2);
            int sq1, sq2, sq3, sq4;
            --r1, --c1;
            sq1 = query(r1, c1);
            sq2 = query(r1, c2);
            sq3 = query(r2, c1);
            sq4 = query(r2, c2);
            print(sq4-sq3-sq2+sq1);
        }
    }

}

int main() {
    ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#if 0
    int t; scan(t); while(t--) solve();
#else
    solve();
#endif
    return 0; 
}
