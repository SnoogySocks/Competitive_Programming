// https://dmoj.ca/problem/coci14c2p2
// 7/2020

#include <iostream>
#include <iomanip>
#include <algorithm>
#include <string>
#include <vector>
#include <array>
#include <unordered_set>
#include <unordered_map>
#include <stack>
#include <queue>
#include <tuple>
#include <cstring>

using namespace std;
typedef long long ll;
#define s_cast static_cast
#define u_ptr unique_ptr
#define u_set unordered_set
#define u_map unordered_map
#define p_queue priority_queue

// Integers only
template<typename T> void scan (T& n);
template<typename T> void print (T n, char&& end = '\n');

template<typename T> T gcf (T a, T b);
template<typename T> T lcm (T a, T b);

void scan_s (char* c, int size) {
	
	memset(c, 0, size);
	char buf;
	
	// Clear console of non alphanumeric values
	do {
		buf = getchar();
	} while ((buf < '0' || '9' < buf)
			 && (buf < 'A' || 'Z' < buf)
			 && (buf < 'a' || 'z' < buf));

	for (int i = 0; i < size-1 
		 && (('0' <= buf && buf <= '9')
		 || ('A' <= buf && buf <= 'Z')
		 || ('a' <= buf && buf <= 'z')); 
		 buf = getchar())
		c[i++] = buf;
}

const int name_size = 21;

void solution() {

	int N; scan(N);
	u_map<string, int> names;

	for (int i = 0; i < N; i++) {
		char* n = new char[name_size]; scan_s(n, name_size);
		names[n]++;
		delete []n;
	}
	for (int i = 0; i < N-1; i++) {
		char* n = new char[name_size]; scan_s(n, name_size);
		names[n]--;
		delete []n;
	}

	for (auto& name : names) {
		if (name.second == 1) {
			printf("%s", name.first.c_str());
			break;
		}
	}
	
}

int main() {

	ios_base::sync_with_stdio(false);
	std::cin.tie(NULL);
#if 0
	int n_tests;
	scan(n_tests);

	for (int i = 0; i < n_tests; i++) {
		solution();
	}
#else
	solution();
#endif

	return 0;

}

template<typename T> void scan (T& n) {

	n = 0;
	bool neg = 0;
	T c = getchar();

	if (c == '-')
		neg = 1, c = getchar();

	// Clear console of non integer values
	for (; c < '0' || '9' < c; c = getchar());

	for (; '0' <= c && c <= '9'; c = getchar())
		n = (n << 3) + (n << 1) + (c & 15);

	if (neg) n *= -1;

}
template<typename T> void print (T n, char&& end) {

	bool neg = 0;

	if (n < 0)
		neg = 1, n *= -1;

	char snum[65];
	int i = 0;
	do {
		snum[i++] = n % 10 + '0';
		n /= 10;
	} while (n);
	i--;

	if (neg)
		putchar('-');

	while (i >= 0)
		putchar(snum[i--]);

	putchar(end);

}

template<typename T> T gcf (T a, T b) {

	while (a != 0) {
		int temp = a;
		a = b % a;
		b = temp;
	}
	return b;

}
template<typename T> T lcm (T a, T b) {
	return (a * b) / gcf(a, b);
}
