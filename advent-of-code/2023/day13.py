import sys
from icecream import ic
from collections import deque
from dataclasses import dataclass
from typing import Tuple
import re
from tqdm import tqdm
from math import gcd, ceil


def p2():
    patterns = [[]]
    for line in arr:
        if line=="":
            patterns.append([])
        else:
            patterns[-1].append(line)

    def transpose(pattern):
        trans = []
        for c in range(len(pattern[0])):
            trans.append([])
            for r in range(len(pattern)):
                trans[-1].append(pattern[r][c])

        return list(map(lambda x: "".join(x), trans))

    def is_palindrome(s):
        for i in range(len(s)//2):
            if s[i]!=s[-i-1]:
                return False
        return True

    def find_reflection(pattern):
        possible = set()
        for end in range(1, len(pattern[0]), 2):
            flag = True
            for r in range(len(pattern)):
                if not is_palindrome(pattern[r][:end+1]):
                    flag = False
                    break
            if flag:
                possible.add((0, end+1))
        for begin in range(1 if len(pattern[0])%2==1 else 0, len(pattern[0])-1, 2):
            flag = True
            for r in range(len(pattern)):
                if not is_palindrome(pattern[r][begin:]):
                    flag = False
                    break
            if flag:
                possible.add((begin, len(pattern[0])))
            # else:
            #     ic(begin, len(pattern[0]))

        return possible


    ans = 0
    cnt = 0

    for pattern in patterns:
        # ic(cnt, pattern)
        a1 = find_reflection(pattern)
        a2 = find_reflection(transpose(pattern))
        cnt += 1

        visited = set()
        has_seen_2 = False
        for r in range(len(pattern)):
            for c in range(len(pattern[r])):
                pattern2 = pattern.copy()
                new = list(pattern2[r])

                m = "#" if pattern2[r][c] == "." else "."
                new[c] = m
                pattern2[r] = "".join(new)

                b1 = find_reflection(pattern2)
                b2 = find_reflection(transpose(pattern2))

                b1.difference_update(a1)
                b2.difference_update(a2)

                assert len(b1) in [0, 1] and len(b2) in [0, 1]

                if len(b1)==1:
                    b = list(b1)[0]
                    if b in visited:
                        continue
                    visited.add(b)
                    mid = int(ceil(b[0]+(b[1]-b[0])/2))
                    ans += mid
                    has_seen_2 = True
                elif len(b2)==1:
                    b = list(b2)[0]
                    if b in visited:
                        continue
                    visited.add(b)
                    mid = int(ceil(b[0]+(b[1]-b[0])/2))
                    ans += 100*mid
                    has_seen_2 = True
                else:
                    assert len(b1)==len(b2)==0

        assert has_seen_2

    ic(ans)


def p1():
    patterns = [[]]
    for line in arr:
        if line=="":
            patterns.append([])
        else:
            patterns[-1].append(line)

    def transpose(pattern):
        trans = []
        for c in range(len(pattern[0])):
            trans.append([])
            for r in range(len(pattern)):
                trans[-1].append(pattern[r][c])

        return list(map(lambda x: "".join(x), trans))

    def is_palindrome(s):
        for i in range(len(s)//2):
            if s[i]!=s[-i-1]:
                return False
        return True

    def find_reflection(pattern):
        possible = set()
        for end in range(1, len(pattern[0]), 2):
            flag = True
            for r in range(len(pattern)):
                if not is_palindrome(pattern[r][:end+1]):
                    flag = False
                    break
            if flag:
                possible.add((0, end+1))
        for begin in range(1 if len(pattern[0])%2==1 else 0, len(pattern[0])-1, 2):
            flag = True
            for r in range(len(pattern)):
                if not is_palindrome(pattern[r][begin:]):
                    flag = False
                    break
            if flag:
                possible.add((begin, len(pattern[0])))
            # else:
            #     ic(begin, len(pattern[0]))

        return possible

    ans = 0
    cnt = 0
    for pattern in patterns:
        # ic(cnt, pattern)
        a = find_reflection(pattern)
        b = find_reflection(transpose(pattern))

        ic(pattern, a, b)

        if len(a)==1:
            a = list(a)[0]
            mid = int(ceil(a[0]+(a[1]-a[0])/2))
            ans += mid
        else:
            b = list(b)[0]
            mid = int(ceil(b[0]+(b[1]-b[0])/2))
            ans += 100*mid

    ic(ans)


def main():
    assert len(sys.argv) == 3
    sys.setrecursionlimit(5000)
    TEST_INPUT_STATE = sys.argv[2]
    TEST_STATE = sys.argv[1]

    if TEST_INPUT_STATE == "test":
        inps = tests
    if TEST_INPUT_STATE == "prod":
        inps = prod

    global arr
    for inp in inps:
        arr = [s.strip() for s in inp.split("\n")[1:-1]]
        if TEST_STATE == "p1":
            p1()
        elif TEST_STATE == "p2":
            p2()


tests = [
"""
#.##..##.
..#.##.#.
##......#
##......#
..#.##.#.
..##..##.
#.#.##.#.

#...##..#
#....#..#
..##..###
#####.##.
#####.##.
..##..###
#....#..#
""",
"""
##.#.##
#.##...
.######
##....#
#.##.#.
.#.####
.#.####
#.##.#.
##....#
.######
#.##..#
##.#.##
..###..
..###..
##.#.##
#.##..#
.######
""",
"""
...###..###
#..##..####
##.##.....#
..#..###..#
.#.##.###..
#...###.###
....#.#.##.
#...#......
#...#......
....#.#.##.
#...###.###
.#.##.###..
..#..###..#
##.##.....#
#..##..####
...###..###
....##..###
""",
"""
#.#.###.#
#.#.###.#
###.#.###
...###...
..#..##.#
..#...#.#
#.#...#.#
..#..##.#
...###...
""",
"""
#.#..##.###
#.#..###...
.#.#.##.#..
.####...###
####..##...
...##...#..
##.#.###...
#..##..##..
#..#.##..##
.######.###
..#####.###
"""
]


prod = [
"""
##.#.##
#.##...
.######
##....#
#.##.#.
.#.####
.#.####
#.##.#.
##....#
.######
#.##..#
##.#.##
..###..
..###..
##.#.##
#.##..#
.######

###....
##..###
.####..
.#.....
####.##
.....##
#..####
.#...##
#...###
.###...
.#..###
####.##
....###
....###
###..##

...##.##.##....
.##.######.##..
.##.#....#.##..
###.######.####
#.##......##.##
..###.##.###...
#####....######
####..##..#####
.###.#....###..
#####....######
..#........#...

####....##.
##.#....##.
#..#.###.##
.###...#.##
..###..#.#.
#.#..#.#.#.
.##..######
###..#....#
##.###..###
..##.#.##..
.#.##.#.#.#
.##.##.#.#.
.##.##.#.#.
.#.##.#.#.#
..##.#.##..

##...###..#.###
##...###..#.##.
##...###..#.##.
##...###..#.###
...###..###..#.
#.###.##....#.#
.#.#.#...#.#..#

###.#.##.#.##
..##.####.##.
##...#..#...#
.....#..#....
####.####.#.#
..#.#.##.#.#.
#####....####
..####..####.
..##########.
##..##..##..#
...#......#..
...#.####.#..
######..#####
###.######.##
##..##..##..#

#.##.#...
..##...##
##..##.##
##..##...
..###.#..
#.##.#...
#.##.#.##
#.##.#...
#.##.#...
..##..#..
#.##.##..
######.##
#....####
.......##
######.##
.####..##
#.##.####

.####....#..##.##
..########..####.
.#..##..#..####..
#.#..#..###...###
..#...##.#..#.##.
###.#.##.###..##.
....###.#..####.#
....###.#..####.#
###.#.##.###..##.
..#...##.#..#.##.
#.#..#..###...###
.#..##..#..####..
..########..#.##.
.####....#..##.##
.####....#..##.##

...#..#...#.#.#
...#..##...#..#
####.###.#...##
..#..##.#.#....
##.#.#...#.#.#.
.....###..#.#..
..#.#.#.....##.
..#.#.#.....##.
.....###..#.#..
##.#.#...#.#.#.
..#..##.#.#....
####.#.#.#...##
...#..##...#..#
...#..#...#.#.#
######.....####

.####.#
##..##.
###.###
......#
......#
#....##
#....##

...##...##.#.#.
...##...##.#.#.
##....##.#.#.#.
#..##......#.##
...##...#######
########....#.#
.##..##......##
#......#..#...#
#..##..##.#.###

.##.###...#
.##.###..##
.##.##.###.
#..##..##..
#..#..#.#..
#..#..#####
....##.####
....#..####
####.......
#..#.##.#..
#####.##.##

..#.#.#.##....#..
.#...###.##.#..#.
.#...###.##.#..#.
..#.#.#.##....#..
##..#.#..#..#.#.#
.#.#..#.#.##.....
.......###.......
####..#...#.##.##
.#.#.#...........
.#...#...........
####..#...#.##.##

##..###.#....
#....###....#
..##....#....
.####...##..#
.#..#.#.#..#.
.####...#...#
#.##.#.#...##
..##.....##..
########..#.#
#....########
.####....##..
#.##.#..####.
#.##.#.#####.

#.#..##.###
#.#..###...
.#.#.##.#..
.####...###
####..##...
...##...#..
##.#.###...
#..##..##..
#..#.##..##
.######.###
..#####.###

#.#.####.#.#.###.
#.#.####.#.#.###.
#.###..###.##.##.
#.#.####.#.##..#.
############.##.#
.#.######.#.#....
...#....#...#.###
#..##..##..#..#..
.##......##..###.
...##..##...##..#
..#..##..#...###.
.....##......####
..###..#.#..###.#
#.#.#..#.#.#.##..
.###....###..#.##
##.#.##.#.###..##
.#........#..#.##

#..####..####
###.##.######
####..#######
#...##...#..#
###....###..#
#........#..#
###.##.###..#
..#....#.....
............#
#..####..#..#
.##....##....
##.#..#.#####
###.##.######
....##.......
###....######
##......##..#
...#..#......

.###.#..##..##..#
#..#######..#####
.#.##.##.#..#.##.
..........##.....
..........##.....
##...###.####.###
#.#.##..######..#
##.#######..#####
#.....##..##..##.
#....############
.#.#.#..######..#
#.##.####.##.####
###.#####.##.####
.#..#.##.####.##.
#..##.##.#..#.##.
.#####..#....#..#
#.##.#..######..#

####.##.##.##.#
..#............
#####..####..##
.###....##....#
..###..####..##
#...#..#..#..#.
.#...##....##..
.#.#.##.##.##.#
#..............
#..#....##....#
....#..#..#..#.
.#.############
.##############
....##########.
...#.##.##.##.#

...........#...
.#.##.#..#..###
########..#####
..........#.###
#......#...#.##
#.####.####..##
.#....#......##
.#....#.#.#.###
...##.......#..
#.####.##....##
#......##.#....
###..#####..#..
#........##.#..

##########.#.##.#
#.##.#...##..#..#
##..###.#..###.#.
##..###.#..###.#.
#.##.#...##..#..#
##########.#.##.#
########.....##..
#.##.##.##....##.
........##..#...#
#....#.##..#...#.
#.######...##.#..

....#..
#..###.
..###.#
..##..#
#..###.
....#..
####...
...##..
..#.###
##...#.
#.#..#.
#.#..#.
##...#.

.###.##.###.#..
.....##.....###
##.######.##...
#..######..##..
#.#.#..#.#.##..
.##......##..##
...######....##
.##.#..#.##.###
.##.#.##.##..##
###......######
#....##....####
....#..#.......
..#......#..#..

#..#######.
#..########
.#.#..##.##
.#.##...#.#
.#.##...#.#
.#.#..##.##
#..########
#..#######.
..#.##.##..

.##....##.###.#
..##..##....#..
..##..##.......
.##....##.###.#
##......###.###
#.#....#.##.##.
#.#....#.#.#.##
#.######.##....
..#.##.#..#.##.
...####...#.##.
.#.####.#..#..#
###....###.##..
##..##..##.##..

####.##..####
####.##..####
..#.#######.#
.#.##.#.##...
.###...##.#..
.##.###.####.
.##..#.#....#
.##..#.#....#
.##.###.####.
.###...##.#..
.#.##.#..#...
..#.#######.#
####.##..####

####..#.##....#
####..#.##.....
#..##.###.##.##
......#...##.#.
....#.##.##....
####.#.#.##.#..
#..#..#####..##
............#.#
#..#..##.#...#.

####.##.####..#
.##..##..##..#.
#..#....#..#...
.##......##...#
.####..####....
.....##.....#.#
#..#....#..#...
####.##.#######
....####....#.#

##..#.....###..#.
....#.##.##...###
#..####.##...#.##
##.##..###...#.#.
##.#.####.##.....
#.####.###.#.##..
##.#..###.#..##..
###.#.#.#.#.#.#..
###.#.#.#...#.#..
....#..#.#.#..##.
..#.#.###.#.#..#.
..#.#.###.#.#..#.
....#..#.#.#..##.
###.#.#.#...#.#..
###.#.#.#.#.#.#..

.#.##..##.#..
.##########..
..##.##.##...
#...#..#.....
...##..##....
.#.######.#..
#...#..#...##
#.#......#.##
.###.##.###..
.#.#.##.#.#..
#..######..##
#.#..##..#.##
.#.######.#..
#....##....##
.#..#..#..#..
#.#.#..#.#.##
.##########..

....###.....####.
##.####..#.#..#.#
####.##..#.##...#
...#....#...##..#
...#...#....##..#
####.#.#..##.####
....#.###.#......
##.##...####...##
##.##...####...##
....#.###.#......
####.#.#..##.###.
...#...#....##..#
...#....#...##..#

..#.##..#
..#.##..#
#######..
#..#.##..
#.#....##
#..#...#.
###.#.#..
#.#.#..##
#.#.#..##
###.#.#..
#..#...#.
#.#....##
#..#.##..
#######..
..#.##.##

....#.##.####
#.##.#...#...
..####..#..##
##...#...#.##
#.####..##.##
###..######..
.##..######..

#..####.#.#
#..####.#.#
#...#.#.#.#
.##.#.##..#
#..##..####
##..##.##..
####..##.#.
#.##..##.#.
##..##.##..

##.#..#.###.#..
##..#.######.#.
###..#.##.#....
##.####.#.####.
..#.####.#.#..#
...#.#.##.###..
###....#.#.#..#
..#.###.##..##.
...#.###.###...
############.#.
###########..#.

.##....
.#.#...
#..####
#..####
.#.#...
.##....
...#..#

.#.##.#..##..#.
..####....#..##
#......#....#.#
.######.#..#.##
.........#####.
..####..#......
..####..#......
.........#####.
.######.#..#.##
#......#....#.#
..####....#..##
.#.##.#..##..#.
.#.#..#.##..#..
.#.##.#...####.
.#.##.#.#...#..

...#.#..#
##..#....
###......
###......
##..#....
...#.#..#
#...##..#
..##....#
..#.##..#
#.....##.
#....####

...###..###
#..##..####
##.##.....#
..#..###..#
.#.##.###..
#...###.###
....#.#.##.
#...#......
#...#......
....#.#.##.
#...###.###
.#.##.###..
..#..###..#
##.##.....#
#..##..####
...###..###
....##..###

..##.#.#..#..#.##
..#.#..##.#.###..
..#.#..##.#.###..
..##.#.#..#..#.##
#..##.##..#.##.##
.#####.#..###...#
...#.....##.####.
..#....#..##..#..
.#..##.#..###.##.
....#.####.####.#
...#.###..#..#..#
.##.#.#..###...##
..#.#.#..###...##

.###.###...
##..#...##.
.##.#.....#
...#...#...
##.#...#.#.
##.#...#.#.
...#...#...
.##.#...#.#
##..#...##.
.###.###...
#.##.##.##.
#.##.##.##.
.###.###...

.#.##......
.#.##......
..##.##..##
....##.##.#
...###.##.#
##.##..##..
.##.##....#
##.#..#..#.
.#..#.....#

#..#.##..#..#..
#..#....#..##..
.##.#.#####.##.
####.#.##......
.##.##..##.....
#..#.###.###...
.##.........#..
#####..#.#.....
.##.#.#........
.....#..#....##
####.###..###..
#..#.##..#.##..
.##.###...#####

#..#.#.##..#..#
.##.#.###.....#
.##.#..##.#...#
########.#..##.
####.#.#####.##
....##...#.##..
....#.##.###.#.
..........#.#..
..........#.#..
....#.##.##..#.
....##...#.##..

..#####.####...#.
......#.#.###.##.
.##.#...#..#..###
.##.#...#..#..###
......#.#.###.##.
..#####.####...#.
#.####....#.#..#.
####.##..#.###.#.
..#..##.#..###..#
##....###.##.#.##
.##....###.##..#.
.##....###.##..#.
##....###.##.#.#.

..#.####.##......
....####.##......
.#.###.###.#....#
#.###..##########
....###.##.######
#......#.#.######
##...#..#..#.##.#

....#...##..#.#..
#..#....#....#..#
.#..##..#..#.#...
..#.#..#..#.##.##
.##...##.##..##..
.##...##.##..##..
..#.#..#..#.##.##
.#..##..#..#.#...
#..#....#....#..#
....#...##..#.#..
....##...#....###
.#..#.#.#..##..##
#...##..###....##
#...##..###....##
.#..#.#....##..##

..#..#.#..##.#..#
#.#.###..##.#.##.
..##..####..#####
.#.##..#...#.####
###.#.#..##.#####
###.#...#.###.##.
###.#.###..#..##.
#..#....#.##..#..
..###....#..##..#
#.#####.##.#.####
#.##.#...#..##..#
##.....###...#..#
#...##....#...##.
.###.#..#.#######
.###.#..#.#######

.##.#..
###....
#.#....
...#..#
#..####
###....
###....
#..####
...#..#

##.....#..#..
....##.####.#
....#.#.##.#.
.#.#.#......#
#....##....##
##..##.#..#.#
#.#.#..###...
####.##.##.##
####.##.##.##

......###....
...##.####.##
..#..######..
##..##....##.
###.#.#..#.#.
......#..#...
###..##..##..
##.##......##
.....######..
..####.##.###
.......##....
...#.#....#.#
..###......##
###.##....##.
##..#.####.#.
###.#..##..#.
...##.#..#.##

..#.##.#....#
..######....#
#..#..#..##..
....##.......
#..####..##..
..#....#....#
##.####.####.
#.#.##.#.##.#
#..#..#......
#.#....#.##.#
#..####..##..
##......####.
.##....##..##

#...#.#
#...#.#
####.#.
..##..#
.######
....#..
.##..#.
....#..
....#..
.##..##
....#..
.######
..##..#
####.#.
#...#.#

..##...#..##...##
.......#.#.##.#.#
......#..###.#.#.
......#####.#..##
##..##.#####..###
##..###.#.###.#.#
.......#.#.##..##
..##...#.#.#.##.#
##..##..#..##.#.#
##..####.##.#.###
##..###.#.#.##..#
.......#..#.##.#.
..##...##.#.#.###
##..##.######.#..
.#..#.##.##..##..
..##......##.#.##
..##..#..#.....#.

.#....####.
..#.#.####.
.#####....#
##...######
##.....##..
.#..#..##..
..##.#....#
#...###..##
#...###..##
..##.#....#
##..#..##..
##.....##..
##...######

.##.##..#
##...####
#...#..##
##....#..
....#..##
...#.####
...#.####
....#..##
##....#..

#.##..##.##..#.#.
#........##.#....
###....######..##
...####...#..###.
##......##....#..
..#.##.#...##.###
#........#.####..
#.#....#.#.#..##.
#.#....#.#.#..##.
#........#.####..
..#.##.#....#.###

......#..#.##..##
......#..#.##..##
#.#.##.....###.##
#..###....##.#..#
..#.##..###....#.
.#.#.#..##....##.
#.#....#.##...#.#
.##..###.#.#.##.#
.##..###.#.#.##.#
#.#....#.##...#.#
.#.#.#..##....##.
..#.##.####....#.
#..###....##.#..#
#.#.##.....###.##
......#..#.##..##

.#.###....###.###
....##.#.###....#
##....#.#.#.##...
##....#.#.#.##...
....##.#.###....#
.#.###....###.###
..#..#.#...##.#..
.#.#..#...####.##
#..#...#.###...##
.##.#.#.#..#..#.#
.##.#.#.#..#..#.#
#..#...#.###...##
...#..#...####.##
..#..#.#...##.#..
.#.###....###.###
....##.#.###....#
##....#.#.#.##...

##..##..####.
.#..#.#.####.
.####.#.#..#.
###.###.#..#.
##..##...##..
######..####.
......#.#..#.
.#..#........
##..##.######
######.##..##
.####..#....#

##...#..#...#
###.##..##.##
##..#####...#
..#........#.
..#.#.##.#.#.
##.#.####.#.#
......##.....
..#.##..##.#.
##.#.####.#.#
..###.##.###.
###...##...##
..#..#..#..#.
..#.#....#.#.
######..#####
.....#..#....
..#.#.##.#.#.
##...####...#

.##.##..#....#..#
.....####.##.####
.#...###......###
.#...............
.#...############
#.#......####....
.#.###..#....#..#
.#.#.#..#....#..#
#...#.##......##.
#.#.#.##.#..#.##.
..#...##..##..##.

.##...#.#
####...#.
#..#..#..
######.##
.....#.#.
....#..##
#..######
.#..##...
....##...
.....###.
.##...###
.##.#.###
.##.#.###

.#.##.######.##
.#.##.######.##
#..##.#.##.#.##
##..#.######.#.
.###..#....#..#
...#.#.######.#
..##.#.####.#.#

.##...##...
.##.#..#...
#....#.##..
.###..#.###
....#......
#.#.#...###
..####.#...
..####.#...
#.#.#...###
....#......
.###..#.###
#....#.##..
.##.#..#...
.#....##...
.##.#..##..

#.#.#..#.#.###..#
#####..##########
.#.#.##.#.#.#####
.#.#.##.#.#.##..#
###.#..#.########
.##..##..##.#....
###.####.########
.######.###..#..#
...#.##.#....####
#...#..#...###..#
###......###..##.
###.#..#.####....
..###..###..##..#
####....####..##.
#.##....##.###..#

.#...#....#...#.#
#.###......###.##
..#.##....##.#..#
..#.##....##.#..#
...#.##..##.#....
####.#....#.#####
###.#..##..#.####
..##...##...##..#
##..########..###
##..########..###
..##...##...##...
###.#..##..#.####
####.#....#.#####

..#.####.##.###
###..#.#....#.#
###..#.#....#.#
..#.####.##.###
##....##.##.##.
#.#.#.##.##.##.
##....#.####.#.
##......#..#..#
##..##.#....#.#
#..#...######..
###.#####..####

#......##.#.#..#.
#......#..#..##..
#......#..#.#..#.
#..##.###...#..#.
#......#.###.##.#
...##...####....#
.#.##.#.##..#..#.
..#..#..#....##..
...##....########
...##....#.#.##.#
###..#####.#.##.#

..#..####....
..####.#.#...
...##..#.#.#.
..#.#####...#
..#..###..#.#
....###...#.#
....###..##.#
..#..###..#.#
..#.#####...#
...##..#.#.#.
..####.#.#...
..#..####....
..#.#.#.##...
###.....###..
##.###...#..#

#.....#.#..#..#..
...#..#.##...#..#
.####.#.###..#.##
.####.#.###..#.##
...#..#.##...#..#
#.....#.#..#..#..
.##......#.#...#.
..#.#.##.....#...
.#...#.####.#..#.
.####.#.######.##
#..#.#...##...#.#
#..#.#...##...#.#
.####.#.######.##
.#...#.####.#..#.
..#.#.##.....#...
.##......#.#...#.
#.....#.#..##.#..

..#.#.#
..#.#.#
....##.
.##..#.
#..#.#.
....#.#
....#..
.....#.
....##.

.........#.
.#....#....
##....##.#.
#......##.#
.######...#
#.......###
.######..##
#..##..###.
#.#..#.#...
#.#..#.#...
#..##..###.

###..#.###.
##.##...#..
.#.#..###..
.#.###.####
.#.###.####
.#.#..###..
##.##...#..
###..#..##.
.####.#..#.
.##...###..
#...#.#.#.#
#...#.#.#.#
.##...###..

.#.#.#.....
...###.....
....#.#####
##..#......
.###..#####
##.....####
.###.#.####
.#.#..#....
.######....
....##.####
..##.#.....
#.###.#####
.##..##....
.#..##..##.
#.#...#....

..#.##.#..#
#.#....#.##
#.##..##.#.
#.##..##.#.
#.#....#.##
..#.##.#..#
..#....#...
..#######.#
.#.#..#.#.#

####..####..#
..##..#####.#
##..##....##.
..##..####..#
....#.#..#.#.
...#.######.#
...#..#..#..#

.###.####.###
.....####....
.###..##..###
...#......#..
.####.##.####
###..#..#..##
....#....#...
.###..##..###
#...######...
#...#.##.#...
..##.#..#.##.
...#.####.#..
.##.######.##
...#.####.#..
#....#..#....
.###.####.###
#...######...

###.####.#..#..
..##...##.#.#.#
##.#..###.##.##
..#.##.##.###.#
..###..###.##.#
......##..##.##
#####..#.##..#.
#####...#......
###....#.###.#.
.....#.##.#####
##..#.#.##...#.
........####.#.
........####.#.
##..#...##...#.
.....#.##.#####

..........####.
...##....#....#
.........##..##
#......##.####.
#...#..##..##..
.#....#...####.
........#######
#.####.###....#
##.##.###.####.
#......#.#....#
#......#.#.##.#

#######.##....#
##.#.##########
##..##.#..#..#.
###....#.#.##.#
######.#..#..#.
..###.##.##..##
##.##.#..#....#
##.#.##........
#..#..##.#....#
#.###..#..#..#.
#.#.#.###.####.
#.#.#####.####.
#.###..#..#..#.

##.###...#.##..#.
#.#....##.###.#..
.#.....#.###..#..
.#.....#.###..#..
#.#....##.###.##.
##.###...#.##..#.
..#.###...#..#.##
#.#.#.##.######..
#.#.#.##.######..
..#.###...#..#.##
##.###...#.##..#.
#.#....##.###.##.
.#.....#.###..#..

#.#.##..##.#.##..
##.#.####.#.##.##
.####....####.###
.#.###..###.#..##
.#.#......#.#..##
..#.#.##.#.#.....
.#...#..#...#.#..
.#######.####.###
#..#.#..#.#..####
.##.##..##.##....
..#........#..###
#..##....##..####
#.#..#..#..#.#...
..##.####.##.....
#####....#####...
##.########.##...
#.##......##.####

......###..##
#####.######.
.##...##.#.#.
########.##..
....#..#.....
.......###.#.
.##.##.###.#.
#..####..##.#
#..####..##.#
.##.##.###.#.
.......###.#.
....#..#.....
########.##..
.##...##...#.
#####.######.
......###..##
#########....

####...####
.###.#.....
.###.#.....
####...####
.####.##..#
.#..#######
#####...#.#
#.####.##..
#.#...#.##.
#.#####....
...###.#.##
#.#.#.#...#
##.#####.##
#...##.####
#...#..####

#..#..####..#
#######..####
.##..######..
#...#..##..#.
####.##..##.#
...###.##.###
##..##.##.##.
.#...##..##..
#.....####...
###...####...
.....#....#..
....########.
#.#.#..##..#.
#....#....#..
#.#..#....#..

.###.####..
.########..
.###..###.#
##########.
.###..###..
.###..###..
##########.
.###..###.#
.########..
.###.####..
#...##...##

#.#.###.#
#.#.###.#
###.#.###
...###...
..#..##.#
..#...#.#
#.#...#.#
..#..##.#
...###...

..##.#...
..##.#...
...##...#
..#..##..
.#.##.#..
#...##...
##..####.
#.###.#..
#.###.#..
#...####.
#...##...
.#.##.#..
..#..##..
...##...#
..##.#...

###..##...#.#####
.#.##.#..#.#.....
#.#####.#.####.##
.#.#..#.#.###.###
##.##.##....#...#
##.##.##....#...#
.#.#..#.#.###.###
#.#####.#.#######
.#.##.#..#.#.....
###..##...#.#####
...#......#.##..#
..#.##....#...###
......###..#.....
..#.##.#.#.....#.
..#.##.#.#.....#.

###.###.#
###.#....
##.#.###.
###.##.##
..#..#..#
######..#
##.###..#

.....#.########
..#.###..##.#.#
##..#...##..##.
##....#.#.#.#..
#####.####...##
#...#.#.#.##.##
#...#.#.#.##.##
#####.####...##
##....#.#.#.#..
##..#...##..##.
..#.#.#..##.#.#
.....#.########
.#....##...####
##.###..#..##.#
##.###..#..##.#

#########.#..####
...##...#..#.#.#.
##....##......#..
.........##..###.
#..##..###.#.##..
#..##..#.#.#.##..
.........##..###.
##....##......#..
...##...#..#.#.#.
#########.#..####
..####..#.#######

...####...##.
.##....##....
.########.##.
##.#..#.#####
####..#######
####..#.##..#
..#.##.#.....
##..##..##..#
#.##..##.#..#
##..##..##..#
#.######.#..#
.###..###....
#..#..#..#..#
....##....##.
#.######.#..#

.#.#...
#......
.#..#.#
..#..#.
..###..
#.#####
#...###
#...###
#.#####
..###..
..#....
.#..#.#
#......
.#.#...
#.#..#.
#.#..#.
.#.#...

####..##.....#.
....###.###....
#######.##.#...
.##..#..###.###
.##.##..####..#
.##.#..####.###
####.#..##.##..
.##.####.#.#.#.
....#.##.##..##
....#.##.##..##
.##.####.#.#.#.
####.#..#####..
.##.#..####.###

..####.....
##....####.
..#..#....#
#.####.##..
#.####.##..
#.####.#.##
.#....#...#
#......#.##
#.####.##..
..####..##.
..#..#..#.#
.#.##.#.##.
.#.##.#.##.
..#..#..###
..####..##.

#......##..
.#.##.#..##
.#....#..##
.#....#.#..
####.###.##
.######....
###..######
..####..#..
..#..#..#..
##....##...
##....##...
########.##
##....##...

##..###.####.
..##..#.#..#.
#########.#..
######.##..#.
######.....#.
######..#..#.
..##......#.#
##..####...#.
##########.#.
##..##.####..
..##...###...
......##.#.##
......###.###
#######.#####
######...#.##
#.##.###.##..
..##..###.#..

#..#.##.###
.##..##.#.#
.....#..#.#
#..##....#.
....#####..
.##.#......
....#..#...
.##.##....#
#..##.###.#
.......#.##
....#..#.##
#..##.###.#
.##.##....#
"""
]


if __name__ == "__main__":
    main()
