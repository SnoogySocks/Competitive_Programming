from collections import defaultdict

prod = ""
test = ""


def main():
    """
    create dict iding all the diff frequencies and that way I can identify which locations should have it
    for each freq iterate through them and keep track of the indices that got the got and those that don't

    edge cases:
        - might have to keep track of duplicates but will see

    sholud be array that contains all the antinodes
    """
    inp = prod.split("\n")
    freqs = defaultdict(list)

    for r in range(len(inp)):
        for c in range(len(inp[0])):
            if inp[r][c] == ".":
                continue
            freqs[inp[r][c]].append((r, c))

    v = defaultdict(int)

    def in_bounds(r, c, r1, c1):
        return 0 <= r < len(inp) and 0 <= c < len(inp[0])

    grid = [["."] * len(inp[0]) for _ in inp]
    for val in freqs.values():
        for k in range(len(val)):
            for j in range(k + 1, len(val)):
                ri, ci = val[k]
                rj, cj = val[j]
                dr, dc = ri - rj, ci - cj
                flag = True
                i = 1
                while flag:
                    flag = False
                    if in_bounds(ri + i * dr, ci + i * dc, rj, cj):
                        v[(ri + i * dr, ci + i * dc)] += 1
                        flag = True
                    if in_bounds(ri - i * dr, ci - i * dc, rj, cj):
                        v[(ri - i * dr, ci - i * dc)] += 1
                        flag = True
                    if in_bounds(rj + i * dr, cj + i * dc, ri, ci):
                        v[(rj + i * dr, cj + i * dc)] += 1
                        flag = True
                    if in_bounds(rj - i * dr, cj - i * dc, ri, ci):
                        v[(rj - i * dr, cj - i * dc)] += 1
                        flag = True
                    i += 1

    # for r, c in v:
    #     grid[r][c] = "#"
    # pprint(grid)
    print(sum(val >= 1 for val in v.values()))


test = """............
........0...
.....0......
.......0....
....0.......
......A.....
............
............
........A...
.........A..
............
............"""

prod = """............s...............1.....................
......................E......3.....S..............
.......................3.....S....................
...e........T.t.......S.1...........I.............
..................B..................I.....O......
g.......z........i39......B..I....................
.......s....S.......3......................i..I...
....e.............2..........B....................
.......tC...z.......g......1......................
.E......s....R....................................
..G...t..........2................................
.........K...C.......2............................
....T..e...........5...C..........................
...T................................O...o.........
...............................g..............o...
.........z...................g......i............o
...9.E............H...........Y.......O...........
..........R..H...............7.O..................
...........H.............v......7........B........
..9.Q.......................W......1........Y.....
.........................z.7.................Y....
.....Q................................v...........
....K.......E.....R...............2..........o....
.n............H......v...........................Y
.G.y..........................Q...................
......G....A5.....................h...............
..........D...5.w...9.............................
......n....5...L..................................
............................v.....................
............L...0t..........7.....................
..n....k............y....................W........
..k..........0.........................W..........
...n.......R..L..a........................W.......
.........................................h........
..0..L........c...b...............................
.....................8.y..........................
.......w.................6.............h.......N..
..........y..4....................................
...0....8...k.....Z........r......................
..............a...8Z.........G......4.............
........4..b.q.....................K..............
.q...........kZ.K......b..D.........d.............
.8.....................D................r.........
.....w.........a...............d........A.........
................................d.A.hV............
................c..........D.....V....r...........
.......Z......6.....l........................A.d..
...................l..6..c....b......r...........N
......a....4........q..l..V..c................N...
l.....w...........q..6............V..............."""

if __name__ == "__main__":
    main()
